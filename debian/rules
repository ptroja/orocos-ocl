#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

CXXFLAGS = $(CFLAGS)

# allow parallel build using recommended approach from 
# http://www.de.debian.org/doc/debian-policy/ch-source.html@s-debianrules-options
#
# For Bash type:
#
# export DEB_BUILD_OPTIONS="parallel=2"
# svn-buildpackage ...
#
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS=$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKE_FLAGS += -j$(NUMJOBS)
endif

# shared library versions, option 1
#version=2.0.5
#major=2
version=`grep orocos-ocl debian/changelog | head -1 | awk '{print substr($$2,2,length($$2)-2)}'`
major=`grep orocos-ocl debian/changelog | head -1 | awk '{print substr($$2,2,3)}'`
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`find . -name liborocos-ocl*.so.* | awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}' | head -1`
#major=`find . -name liborocos-ocl*.so.* | awk '{if (match($$0,/\.so\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART+4)}' | head -1`

include debian/rules.targets

configure: configure-stamp $(CONFIGURE_TARGETS)
configure-stamp:
	dh_testdir
	touch configure-stamp

build: build-stamp $(BUILD_TARGETS)
build-stamp:  configure
	dh_testdir
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

# Add here commands to clean up after the build process.
	rm -rf build*

	dh_clean 

install: build $(INSTALL_TARGETS)
	dh_testdir
	dh_testroot
	dh_installdirs


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
	dh_install --sourcedir=$(CURDIR)/debian/tmp --list-missing
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip --dbg-package=orocos-ocl-dbg$(major)
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps -v 
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
